// qnormaldiffusemapmaterial.sip generated by MetaSIP
//
// This file is part of the Qt3DExtras Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DExtras
{
%TypeHeaderCode
#include <qnormaldiffusemapmaterial.h>
%End

    class QNormalDiffuseMapMaterial : Qt3DRender::QMaterial
    {
%TypeHeaderCode
#include <qnormaldiffusemapmaterial.h>
%End

    public:
        explicit QNormalDiffuseMapMaterial(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QNormalDiffuseMapMaterial();
        QColor ambient() const;
        QColor specular() const;
        Qt3DRender::QAbstractTexture *diffuse() const;
        Qt3DRender::QAbstractTexture *normal() const;
        float shininess() const;
        float textureScale() const;

    public slots:
        void setAmbient(const QColor &ambient);
        void setSpecular(const QColor &specular);
        void setDiffuse(Qt3DRender::QAbstractTexture *diffuse /KeepReference/);
        void setNormal(Qt3DRender::QAbstractTexture *normal /KeepReference/);
        void setShininess(float shininess);
        void setTextureScale(float textureScale);

    signals:
        void ambientChanged(const QColor &ambient);
        void diffuseChanged(Qt3DRender::QAbstractTexture *diffuse);
        void normalChanged(Qt3DRender::QAbstractTexture *normal);
        void specularChanged(const QColor &specular);
        void shininessChanged(float shininess);
        void textureScaleChanged(float textureScale);
    };
};
