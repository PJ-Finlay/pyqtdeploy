// qabstractcameracontroller.sip generated by MetaSIP
//
// This file is part of the Qt3DExtras Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_10_0 -)

namespace Qt3DExtras
{
%TypeHeaderCode
#include <qabstractcameracontroller.h>
%End

    class QAbstractCameraController : Qt3DCore::QEntity /Abstract/
    {
%TypeHeaderCode
#include <qabstractcameracontroller.h>
%End

    public:
        virtual ~QAbstractCameraController();
        Qt3DRender::QCamera *camera() const;
        float linearSpeed() const;
        float lookSpeed() const;
        float acceleration() const;
        float deceleration() const;
        void setCamera(Qt3DRender::QCamera *camera);
        void setLinearSpeed(float linearSpeed);
        void setLookSpeed(float lookSpeed);
        void setAcceleration(float acceleration);
        void setDeceleration(float deceleration);

    signals:
        void cameraChanged();
        void linearSpeedChanged();
        void lookSpeedChanged();
        void accelerationChanged(float acceleration);
        void decelerationChanged(float deceleration);

    protected:
        explicit QAbstractCameraController(Qt3DCore::QNode *parent /TransferThis/ = 0);
        Qt3DInput::QKeyboardDevice *keyboardDevice() const;
        Qt3DInput::QMouseDevice *mouseDevice() const;
    };
};

%End
