// qextrudedtextgeometry.sip generated by MetaSIP
//
// This file is part of the Qt3DExtras Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_9_0 -)

namespace Qt3DExtras
{
%TypeHeaderCode
#include <qextrudedtextgeometry.h>
%End

    class QExtrudedTextGeometry : Qt3DRender::QGeometry
    {
%TypeHeaderCode
#include <qextrudedtextgeometry.h>
%End

    public:
        explicit QExtrudedTextGeometry(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QExtrudedTextGeometry();
        Qt3DRender::QAttribute *positionAttribute() const;
        Qt3DRender::QAttribute *normalAttribute() const;
        Qt3DRender::QAttribute *indexAttribute() const;
        QString text() const;
        QFont font() const;
        float extrusionLength() const;

    public slots:
        void setText(const QString &text);
        void setFont(const QFont &font);
        void setDepth(float extrusionLength);

    signals:
        void textChanged(const QString &text);
        void fontChanged(const QFont &font);
        void depthChanged(float extrusionLength);
    };
};

%End
