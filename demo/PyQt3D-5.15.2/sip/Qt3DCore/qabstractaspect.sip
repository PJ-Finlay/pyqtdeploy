// qabstractaspect.sip generated by MetaSIP
//
// This file is part of the Qt3DCore Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DCore
{
%TypeHeaderCode
#include <qabstractaspect.h>
%End

    typedef QSharedPointer<Qt3DCore::QBackendNodeMapper> QBackendNodeMapperPtr;

    class QAbstractAspect : QObject
    {
%TypeHeaderCode
#include <qabstractaspect.h>
%End

    public:
        explicit QAbstractAspect(QObject *parent /TransferThis/ = 0);
        virtual ~QAbstractAspect();

    protected:
        Qt3DCore::QNodeId rootEntityId() const;
        void registerBackendType(const QMetaObject &, const Qt3DCore::QBackendNodeMapperPtr &functor);
%If (Qt3D_5_15_0 -)
        void registerBackendType(const QMetaObject &obj, const Qt3DCore::QBackendNodeMapperPtr &functor, bool supportsSyncing);
%End
%If (Qt3D_5_9_0 -)
        void unregisterBackendType(const QMetaObject &);
%End
    };
};
