// qcomponent.sip generated by MetaSIP
//
// This file is part of the Qt3DCore Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DCore
{
%TypeHeaderCode
#include <qcomponent.h>
%End

    class QComponent : Qt3DCore::QNode
    {
%TypeHeaderCode
#include <qcomponent.h>
%End

    public:
        explicit QComponent(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QComponent();
        bool isShareable() const;
        QVector<Qt3DCore::QEntity *> entities() const;

    public slots:
        void setShareable(bool isShareable);

    signals:
        void shareableChanged(bool isShareable);
%If (Qt3D_5_9_0 -)
        void addedToEntity(Qt3DCore::QEntity *entity /ScopesStripped=1/);
%End
%If (Qt3D_5_9_0 -)
        void removedFromEntity(Qt3DCore::QEntity *entity /ScopesStripped=1/);
%End
    };
};
