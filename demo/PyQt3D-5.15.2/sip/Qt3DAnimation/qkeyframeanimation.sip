// qkeyframeanimation.sip generated by MetaSIP
//
// This file is part of the Qt3DAnimation Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_10_0 -)

namespace Qt3DAnimation
{
%TypeHeaderCode
#include <qkeyframeanimation.h>
%End

    class QKeyframeAnimation : Qt3DAnimation::QAbstractAnimation
    {
%TypeHeaderCode
#include <qkeyframeanimation.h>
%End

    public:
        explicit QKeyframeAnimation(QObject *parent /TransferThis/ = 0);

        enum RepeatMode
        {
            None /PyName=None_/,
            Constant,
            Repeat,
        };

        QVector<float> framePositions() const;
        QVector<Qt3DCore::QTransform *> keyframeList() const;
        Qt3DCore::QTransform *target() const;
        QEasingCurve easing() const;
        QString targetName() const;
        Qt3DAnimation::QKeyframeAnimation::RepeatMode startMode() const;
        Qt3DAnimation::QKeyframeAnimation::RepeatMode endMode() const;
        void setKeyframes(const QVector<Qt3DCore::QTransform *> &keyframes);
        void addKeyframe(Qt3DCore::QTransform *keyframe);
        void removeKeyframe(Qt3DCore::QTransform *keyframe);

    public slots:
        void setFramePositions(const QVector<float> &positions);
        void setTarget(Qt3DCore::QTransform *target);
        void setEasing(const QEasingCurve &easing);
        void setTargetName(const QString &name);
        void setStartMode(Qt3DAnimation::QKeyframeAnimation::RepeatMode mode);
        void setEndMode(Qt3DAnimation::QKeyframeAnimation::RepeatMode mode);

    signals:
        void framePositionsChanged(const QVector<float> &positions);
        void targetChanged(Qt3DCore::QTransform *target);
        void easingChanged(const QEasingCurve &easing);
        void targetNameChanged(const QString &name);
        void startModeChanged(Qt3DAnimation::QKeyframeAnimation::RepeatMode startMode /ScopesStripped=1/);
        void endModeChanged(Qt3DAnimation::QKeyframeAnimation::RepeatMode endMode /ScopesStripped=1/);
    };
};

%End
