// qmorphtarget.sip generated by MetaSIP
//
// This file is part of the Qt3DAnimation Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_10_0 -)

namespace Qt3DAnimation
{
%TypeHeaderCode
#include <qmorphtarget.h>
%End

    class QMorphTarget : QObject
    {
%TypeHeaderCode
#include <qmorphtarget.h>
%End

    public:
        explicit QMorphTarget(QObject *parent /TransferThis/ = 0);
        QVector<Qt3DRender::QAttribute *> attributeList() const;
        QStringList attributeNames() const;
        void setAttributes(const QVector<Qt3DRender::QAttribute *> &attributes);
        void addAttribute(Qt3DRender::QAttribute *attribute);
        void removeAttribute(Qt3DRender::QAttribute *attribute);
        static Qt3DAnimation::QMorphTarget *fromGeometry(Qt3DRender::QGeometry *geometry, const QStringList &attributes);

    signals:
        void attributeNamesChanged(const QStringList &attributeNames);
    };
};

%End
