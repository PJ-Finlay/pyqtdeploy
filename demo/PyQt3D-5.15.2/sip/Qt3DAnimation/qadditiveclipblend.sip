// qadditiveclipblend.sip generated by MetaSIP
//
// This file is part of the Qt3DAnimation Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_10_0 -)

namespace Qt3DAnimation
{
%TypeHeaderCode
#include <qadditiveclipblend.h>
%End

    class QAdditiveClipBlend : Qt3DAnimation::QAbstractClipBlendNode
    {
%TypeHeaderCode
#include <qadditiveclipblend.h>
%End

    public:
        explicit QAdditiveClipBlend(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QAdditiveClipBlend();
        float additiveFactor() const;
        Qt3DAnimation::QAbstractClipBlendNode *baseClip() const;
        Qt3DAnimation::QAbstractClipBlendNode *additiveClip() const;

    public slots:
        void setAdditiveFactor(float additiveFactor);
        void setBaseClip(Qt3DAnimation::QAbstractClipBlendNode *baseClip);
        void setAdditiveClip(Qt3DAnimation::QAbstractClipBlendNode *additiveClip);

    signals:
        void additiveFactorChanged(float additiveFactor);
        void baseClipChanged(Qt3DAnimation::QAbstractClipBlendNode *baseClip);
        void additiveClipChanged(Qt3DAnimation::QAbstractClipBlendNode *additiveClip);
    };
};

%End
