// qkeyframe.sip generated by MetaSIP
//
// This file is part of the Qt3DAnimation Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_10_0 -)

namespace Qt3DAnimation
{
%TypeHeaderCode
#include <qkeyframe.h>
%End

    class QKeyFrame
    {
%TypeHeaderCode
#include <qkeyframe.h>
%End

    public:
        enum InterpolationType
        {
            ConstantInterpolation,
            LinearInterpolation,
            BezierInterpolation,
        };

        QKeyFrame();
        explicit QKeyFrame(QVector2D coords);
        QKeyFrame(QVector2D coords, QVector2D lh, QVector2D rh);
        void setCoordinates(QVector2D coords);
        QVector2D coordinates() const;
        void setLeftControlPoint(QVector2D lh);
        QVector2D leftControlPoint() const;
        void setRightControlPoint(QVector2D rh);
        QVector2D rightControlPoint() const;
        void setInterpolationType(Qt3DAnimation::QKeyFrame::InterpolationType interp);
        Qt3DAnimation::QKeyFrame::InterpolationType interpolationType() const;
    };

    bool operator==(const Qt3DAnimation::QKeyFrame &, const Qt3DAnimation::QKeyFrame &);
    bool operator!=(const Qt3DAnimation::QKeyFrame &, const Qt3DAnimation::QKeyFrame &);
};

%End
