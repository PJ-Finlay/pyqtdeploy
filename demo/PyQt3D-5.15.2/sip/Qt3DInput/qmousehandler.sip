// qmousehandler.sip generated by MetaSIP
//
// This file is part of the Qt3DInput Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DInput
{
%TypeHeaderCode
#include <qmousehandler.h>
%End

    class QMouseHandler : Qt3DCore::QComponent
    {
%TypeHeaderCode
#include <qmousehandler.h>
%End

    public:
        explicit QMouseHandler(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QMouseHandler();
        Qt3DInput::QMouseDevice *sourceDevice() const;
        bool containsMouse() const;

    public slots:
        void setSourceDevice(Qt3DInput::QMouseDevice *mouseDevice);

    signals:
        void sourceDeviceChanged(Qt3DInput::QMouseDevice *mouseDevice /ScopesStripped=1/);
        void containsMouseChanged(bool containsMouse);
        void clicked(Qt3DInput::QMouseEvent *mouse);
        void doubleClicked(Qt3DInput::QMouseEvent *mouse);
        void entered();
        void exited();
        void pressed(Qt3DInput::QMouseEvent *mouse);
        void released(Qt3DInput::QMouseEvent *mouse);
        void pressAndHold(Qt3DInput::QMouseEvent *mouse);
        void positionChanged(Qt3DInput::QMouseEvent *mouse);
        void wheel(Qt3DInput::QWheelEvent *wheel);

    protected:
        virtual void sceneChangeEvent(const Qt3DCore::QSceneChangePtr &change);
    };
};
