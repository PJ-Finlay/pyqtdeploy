// qkeyevent.sip generated by MetaSIP
//
// This file is part of the Qt3DInput Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DInput
{
%TypeHeaderCode
#include <qkeyevent.h>
%End

    class QKeyEvent : QObject
    {
%TypeHeaderCode
#include <qkeyevent.h>
%End

    public:
        QKeyEvent(QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, const QString &text = QString(), bool autorep = false, ushort count = 1);
        explicit QKeyEvent(const ::QKeyEvent &ke);
        virtual ~QKeyEvent();
        int key() const;
        QString text() const;
        int modifiers() const;
        bool isAutoRepeat() const;
        int count() const;
        quint32 nativeScanCode() const;
        bool isAccepted() const;
        void setAccepted(bool accepted);
        QEvent::Type type() const;
        bool matches(QKeySequence::StandardKey key_) const;
    };
};
