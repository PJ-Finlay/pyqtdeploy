// qrendercapture.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_8_0 -)

namespace Qt3DRender
{
%TypeHeaderCode
#include <qrendercapture.h>
%End

    class QRenderCaptureReply : QObject
    {
%TypeHeaderCode
#include <qrendercapture.h>
%End

    public:
        QImage image() const;
        int captureId() const;
        bool isComplete() const;
        void saveToFile(const QString &fileName) const /ReleaseGIL/;

    signals:
        void completeChanged(bool isComplete);

    public:
%If (Qt3D_5_9_0 -)
        bool saveImage(const QString &fileName) const /ReleaseGIL/;
%End

    signals:
%If (Qt3D_5_9_0 -)
        void completed();
%End

    private:
        QRenderCaptureReply(QObject *parent /TransferThis/ = 0);
    };

    class QRenderCapture : Qt3DRender::QFrameGraphNode
    {
%TypeHeaderCode
#include <qrendercapture.h>
%End

    public:
        explicit QRenderCapture(Qt3DCore::QNode *parent /TransferThis/ = 0);
        Qt3DRender::QRenderCaptureReply *requestCapture(int captureId) /Factory/;
%If (Qt3D_5_9_0 -)
        Qt3DRender::QRenderCaptureReply *requestCapture() /Factory/;
%End
%If (Qt3D_5_10_0 -)
        Qt3DRender::QRenderCaptureReply *requestCapture(const QRect &rect) /Factory/;
%End

    protected:
        virtual void sceneChangeEvent(const Qt3DCore::QSceneChangePtr &change);
    };
};

%End
