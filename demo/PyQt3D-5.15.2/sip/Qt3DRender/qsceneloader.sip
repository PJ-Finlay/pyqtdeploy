// qsceneloader.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qsceneloader.h>
%End

    class QSceneLoader : Qt3DCore::QComponent
    {
%TypeHeaderCode
#include <qsceneloader.h>
%End

    public:
        explicit QSceneLoader(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QSceneLoader();
        virtual void sceneChangeEvent(const Qt3DCore::QSceneChangePtr &change);

        enum Status
        {
            None /PyName=None_/,
            Loading,
            Ready,
            Error,
        };

        QUrl source() const;
        Qt3DRender::QSceneLoader::Status status() const;

    public slots:
        void setSource(const QUrl &arg);

    signals:
        void sourceChanged(const QUrl &source);
        void statusChanged(Qt3DRender::QSceneLoader::Status status /ScopesStripped=2/);

    public:
%If (Qt3D_5_9_0 -)

        enum ComponentType
        {
            UnknownComponent,
            GeometryRendererComponent,
            TransformComponent,
            MaterialComponent,
            LightComponent,
            CameraLensComponent,
        };

%End
%If (Qt3D_5_9_0 -)
        Qt3DCore::QEntity *entity(const QString &entityName) const;
%End
%If (Qt3D_5_9_0 -)
        QStringList entityNames() const;
%End
%If (Qt3D_5_9_0 -)
        Qt3DCore::QComponent *component(const QString &entityName, Qt3DRender::QSceneLoader::ComponentType componentType) const;
%End
    };
};
