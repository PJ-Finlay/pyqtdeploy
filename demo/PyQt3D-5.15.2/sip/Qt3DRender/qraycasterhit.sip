// qraycasterhit.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_11_0 -)

namespace Qt3DRender
{
%TypeHeaderCode
#include <qraycasterhit.h>
%End

    class QRayCasterHit
    {
%TypeHeaderCode
#include <qraycasterhit.h>
%End

    public:
        enum HitType
        {
            TriangleHit,
            LineHit,
            PointHit,
            EntityHit,
        };

        QRayCasterHit();
        QRayCasterHit(Qt3DRender::QRayCasterHit::HitType type, Qt3DCore::QNodeId id, float distance, const QVector3D &localIntersect, const QVector3D &worldIntersect, uint primitiveIndex, uint v1, uint v2, uint v3);
        QRayCasterHit(const Qt3DRender::QRayCasterHit &other);
        ~QRayCasterHit();
        Qt3DRender::QRayCasterHit::HitType type() const;
        Qt3DCore::QNodeId entityId() const;
        Qt3DCore::QEntity *entity() const;
        float distance() const;
        QVector3D localIntersection() const;
        QVector3D worldIntersection() const;
        uint primitiveIndex() const;
        uint vertex1Index() const;
        uint vertex2Index() const;
        uint vertex3Index() const;
    };
};

%End
