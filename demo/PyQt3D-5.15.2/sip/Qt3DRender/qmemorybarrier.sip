// qmemorybarrier.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt3D_5_9_0 -)

namespace Qt3DRender
{
%TypeHeaderCode
#include <qmemorybarrier.h>
%End

    class QMemoryBarrier : Qt3DRender::QFrameGraphNode
    {
%TypeHeaderCode
#include <qmemorybarrier.h>
%End

    public:
        explicit QMemoryBarrier(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QMemoryBarrier();

        enum Operation
        {
            None /PyName=None_/,
            VertexAttributeArray,
            ElementArray,
            Uniform,
            TextureFetch,
            ShaderImageAccess,
            Command,
            PixelBuffer,
            TextureUpdate,
            BufferUpdate,
            FrameBuffer,
            TransformFeedback,
            AtomicCounter,
            ShaderStorage,
            QueryBuffer,
            All,
        };

        typedef QFlags<Qt3DRender::QMemoryBarrier::Operation> Operations;
        Qt3DRender::QMemoryBarrier::Operations waitOperations() const;

    public slots:
        void setWaitOperations(Qt3DRender::QMemoryBarrier::Operations operations);

    signals:
        void waitOperationsChanged(Qt3DRender::QMemoryBarrier::Operations barrierTypes /ScopesStripped=1/);
    };
};

%End
