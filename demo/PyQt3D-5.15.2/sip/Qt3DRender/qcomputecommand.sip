// qcomputecommand.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qcomputecommand.h>
%End

    class QComputeCommand : Qt3DCore::QComponent
    {
%TypeHeaderCode
#include <qcomputecommand.h>
%End

    public:
        explicit QComputeCommand(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QComputeCommand();
        int workGroupX() const;
        int workGroupY() const;
        int workGroupZ() const;

    public slots:
        void setWorkGroupX(int workGroupX);
        void setWorkGroupY(int workGroupY);
        void setWorkGroupZ(int workGroupZ);

    signals:
        void workGroupXChanged();
        void workGroupYChanged();
        void workGroupZChanged();

    public:
%If (Qt3D_5_13_0 -)

        enum RunType
        {
            Continuous,
            Manual,
        };

%End
%If (Qt3D_5_13_0 -)
        Qt3DRender::QComputeCommand::RunType runType() const;
%End

    public slots:
%If (Qt3D_5_13_0 -)
        void setRunType(Qt3DRender::QComputeCommand::RunType runType);
%End
%If (Qt3D_5_13_0 -)
        void trigger(int frameCount = 1);
%End
%If (Qt3D_5_13_0 -)
        void trigger(int workGroupX, int workGroupY, int workGroupZ, int frameCount = 1);
%End

    signals:
%If (Qt3D_5_13_0 -)
        void runTypeChanged();
%End
    };
};
