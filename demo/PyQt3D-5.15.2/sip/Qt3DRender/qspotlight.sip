// qspotlight.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qspotlight.h>
%End

    class QSpotLight : Qt3DRender::QAbstractLight
    {
%TypeHeaderCode
#include <qspotlight.h>
%End

    public:
        explicit QSpotLight(Qt3DCore::QNode *parent /TransferThis/ = 0);
        virtual ~QSpotLight();
        QVector3D localDirection() const;
        float cutOffAngle() const;
        float constantAttenuation() const;
        float linearAttenuation() const;
        float quadraticAttenuation() const;

    public slots:
        void setConstantAttenuation(float value);
        void setLinearAttenuation(float value);
        void setQuadraticAttenuation(float value);
        void setLocalDirection(const QVector3D &localDirection);
        void setCutOffAngle(float cutOffAngle);

    signals:
        void constantAttenuationChanged(float constantAttenuation);
        void linearAttenuationChanged(float linearAttenuation);
        void quadraticAttenuationChanged(float quadraticAttenuation);
        void localDirectionChanged(const QVector3D &localDirection);
        void cutOffAngleChanged(float cutOffAngle);
    };
};
