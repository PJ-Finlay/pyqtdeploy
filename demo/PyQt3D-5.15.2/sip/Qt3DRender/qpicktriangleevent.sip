// qpicktriangleevent.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qpicktriangleevent.h>
%End

    class QPickTriangleEvent : Qt3DRender::QPickEvent
    {
%TypeHeaderCode
#include <qpicktriangleevent.h>
%End

    public:
        QPickTriangleEvent();
        QPickTriangleEvent(const QPointF &position, const QVector3D &worldIntersection, const QVector3D &localIntersection, float distance, uint triangleIndex, uint vertex1Index, uint vertex2Index, uint vertex3Index);
%If (Qt3D_5_8_0 - Qt3D_5_9_0)
        QPickTriangleEvent(const QPointF &position, const QVector3D &worldIntersection, const QVector3D &localIntersection, float distance, uint triangleIndex, uint vertex1Index, uint vertex2Index, uint vertex3Index, Qt3DRender::QPickEvent::Buttons button, int buttons, int modifiers);
%End
%If (Qt3D_5_9_0 -)
        QPickTriangleEvent(const QPointF &position, const QVector3D &worldIntersection, const QVector3D &localIntersection, float distance, uint triangleIndex, uint vertex1Index, uint vertex2Index, uint vertex3Index, Qt3DRender::QPickEvent::Buttons button, int buttons, int modifiers, const QVector3D &uvw);
%End
        virtual ~QPickTriangleEvent();
        uint triangleIndex() const;
        uint vertex1Index() const;
        uint vertex2Index() const;
        uint vertex3Index() const;
%If (Qt3D_5_9_0 -)
        QVector3D uvw() const;
%End
    };
};
