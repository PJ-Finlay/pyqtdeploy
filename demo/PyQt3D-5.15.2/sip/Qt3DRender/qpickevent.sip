// qpickevent.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qpickevent.h>
%End

    class QPickEvent : QObject
    {
%TypeHeaderCode
#include <qpickevent.h>
%End

    public:
        QPickEvent();
        QPickEvent(const QPointF &position, const QVector3D &worldIntersection, const QVector3D &localIntersection, float distance);
%If (Qt3D_5_8_0 -)
        QPickEvent(const QPointF &position, const QVector3D &worldIntersection, const QVector3D &localIntersection, float distance, Qt3DRender::QPickEvent::Buttons button, int buttons, int modifiers);
%End
        virtual ~QPickEvent();
        bool isAccepted() const;
        QPointF position() const;
        float distance() const;
        QVector3D worldIntersection() const;
        QVector3D localIntersection() const;

    public slots:
        void setAccepted(bool accepted);

    signals:
        void acceptedChanged(bool accepted);

    public:
%If (Qt3D_5_8_0 -)

        enum Buttons
        {
            LeftButton,
            RightButton,
            MiddleButton,
            BackButton,
            NoButton,
        };

%End
%If (Qt3D_5_8_0 -)

        enum Modifiers
        {
            NoModifier,
            ShiftModifier,
            ControlModifier,
            AltModifier,
            MetaModifier,
            KeypadModifier,
        };

%End
%If (Qt3D_5_8_0 -)
        Qt3DRender::QPickEvent::Buttons button() const;
%End
%If (Qt3D_5_8_0 -)
        int buttons() const;
%End
%If (Qt3D_5_8_0 -)
        int modifiers() const;
%End
%If (Qt3D_5_14_0 -)
        Qt3DRender::QViewport *viewport() const;
%End
%If (Qt3D_5_14_0 -)
        Qt3DCore::QEntity *entity() const;
%End
    };
};
