// qtexturewrapmode.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qtexturewrapmode.h>
%End

    class QTextureWrapMode : QObject
    {
%TypeHeaderCode
#include <qtexturewrapmode.h>
%End

    public:
        enum WrapMode
        {
            Repeat,
            MirroredRepeat,
            ClampToEdge,
            ClampToBorder,
        };

        QTextureWrapMode(Qt3DRender::QTextureWrapMode::WrapMode wrapMode = Qt3DRender::QTextureWrapMode::WrapMode::ClampToEdge, QObject *parent /TransferThis/ = 0);
        QTextureWrapMode(Qt3DRender::QTextureWrapMode::WrapMode x, Qt3DRender::QTextureWrapMode::WrapMode y, Qt3DRender::QTextureWrapMode::WrapMode z, QObject *parent /TransferThis/ = 0);
        virtual ~QTextureWrapMode();
        Qt3DRender::QTextureWrapMode::WrapMode x() const;
        Qt3DRender::QTextureWrapMode::WrapMode y() const;
        Qt3DRender::QTextureWrapMode::WrapMode z() const;

    public slots:
        void setX(Qt3DRender::QTextureWrapMode::WrapMode x);
        void setY(Qt3DRender::QTextureWrapMode::WrapMode y);
        void setZ(Qt3DRender::QTextureWrapMode::WrapMode z);

    signals:
        void xChanged(Qt3DRender::QTextureWrapMode::WrapMode x /ScopesStripped=2/);
        void yChanged(Qt3DRender::QTextureWrapMode::WrapMode y /ScopesStripped=2/);
        void zChanged(Qt3DRender::QTextureWrapMode::WrapMode z /ScopesStripped=2/);
    };
};
