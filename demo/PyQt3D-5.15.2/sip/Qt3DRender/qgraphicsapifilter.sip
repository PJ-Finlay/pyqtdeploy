// qgraphicsapifilter.sip generated by MetaSIP
//
// This file is part of the Qt3DRender Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt3D.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace Qt3DRender
{
%TypeHeaderCode
#include <qgraphicsapifilter.h>
%End

    class QGraphicsApiFilter : QObject
    {
%TypeHeaderCode
#include <qgraphicsapifilter.h>
%End

    public:
        enum Api
        {
            OpenGLES,
            OpenGL,
%If (Qt3D_5_11_0 -)
            Vulkan,
%End
%If (Qt3D_5_11_0 -)
            DirectX,
%End
%If (Qt3D_5_15_0 -)
            RHI,
%End
        };

        enum OpenGLProfile
        {
            NoProfile,
            CoreProfile,
            CompatibilityProfile,
        };

        explicit QGraphicsApiFilter(QObject *parent /TransferThis/ = 0);
        virtual ~QGraphicsApiFilter();
        Qt3DRender::QGraphicsApiFilter::Api api() const;
        Qt3DRender::QGraphicsApiFilter::OpenGLProfile profile() const;
        int minorVersion() const;
        int majorVersion() const;
        QStringList extensions() const;
        QString vendor() const;

    public slots:
        void setApi(Qt3DRender::QGraphicsApiFilter::Api api);
        void setProfile(Qt3DRender::QGraphicsApiFilter::OpenGLProfile profile);
        void setMinorVersion(int minorVersion);
        void setMajorVersion(int majorVersion);
        void setExtensions(const QStringList &extensions);
        void setVendor(const QString &vendor);

    signals:
        void apiChanged(Qt3DRender::QGraphicsApiFilter::Api api);
        void profileChanged(Qt3DRender::QGraphicsApiFilter::OpenGLProfile profile);
        void minorVersionChanged(int minorVersion);
        void majorVersionChanged(int majorVersion);
        void extensionsChanged(const QStringList &extensions);
        void vendorChanged(const QString &vendor);
        void graphicsApiFilterChanged();
    };
};
