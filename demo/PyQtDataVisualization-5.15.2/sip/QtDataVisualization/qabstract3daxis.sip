// qabstract3daxis.sip generated by MetaSIP
//
// This file is part of the QtDataVisualization Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQtDataVisualization.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace QtDataVisualization
{
%TypeHeaderCode
#include <qabstract3daxis.h>
%End

    class QAbstract3DAxis : QObject /NoDefaultCtors/
    {
%TypeHeaderCode
#include <qabstract3daxis.h>
%End

    public:
        enum AxisOrientation
        {
            AxisOrientationNone,
            AxisOrientationX,
            AxisOrientationY,
            AxisOrientationZ,
        };

        enum AxisType
        {
            AxisTypeNone,
            AxisTypeCategory,
            AxisTypeValue,
        };

        virtual ~QAbstract3DAxis();
        QString title() const;
        void setLabels(const QStringList &labels);
        QStringList labels() const;
        QtDataVisualization::QAbstract3DAxis::AxisOrientation orientation() const;
        QtDataVisualization::QAbstract3DAxis::AxisType type() const;
        void setMin(float min);
        float min() const;
        void setMax(float max);
        float max() const;
        void setAutoAdjustRange(bool autoAdjust);
        bool isAutoAdjustRange() const;
        void setRange(float min, float max);
        void setTitle(const QString &title);

    signals:
        void titleChanged(const QString &newTitle);
        void labelsChanged();
        void orientationChanged(QtDataVisualization::QAbstract3DAxis::AxisOrientation orientation /ScopesStripped=1/);
        void minChanged(float value);
        void maxChanged(float value);
        void rangeChanged(float min, float max);
        void autoAdjustRangeChanged(bool autoAdjust);

    public:
%If (QtDataVisualization_1_1_0 -)
        void setLabelAutoRotation(float angle);
%End
%If (QtDataVisualization_1_1_0 -)
        float labelAutoRotation() const;
%End
%If (QtDataVisualization_1_1_0 -)
        void setTitleVisible(bool visible);
%End
%If (QtDataVisualization_1_1_0 -)
        bool isTitleVisible() const;
%End
%If (QtDataVisualization_1_1_0 -)
        void setTitleFixed(bool fixed);
%End
%If (QtDataVisualization_1_1_0 -)
        bool isTitleFixed() const;
%End

    signals:
%If (QtDataVisualization_1_1_0 -)
        void labelAutoRotationChanged(float angle);
%End
%If (QtDataVisualization_1_1_0 -)
        void titleVisibilityChanged(bool visible);
%End
%If (QtDataVisualization_1_1_0 -)
        void titleFixedChanged(bool fixed);
%End
    };
};
