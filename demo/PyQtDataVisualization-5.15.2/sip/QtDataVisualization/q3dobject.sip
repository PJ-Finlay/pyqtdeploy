// q3dobject.sip generated by MetaSIP
//
// This file is part of the QtDataVisualization Python extension module.
//
// Copyright (c) 2020 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQtDataVisualization.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace QtDataVisualization
{
%TypeHeaderCode
#include <q3dobject.h>
%End

    class Q3DObject : QObject
    {
%TypeHeaderCode
#include <q3dobject.h>
%End

    public:
%If (QtDataVisualization_5_7_0 -)
        explicit Q3DObject(QObject *parent /TransferThis/ = 0);
%End
%If (- QtDataVisualization_5_7_0)
        Q3DObject(QObject *parent /TransferThis/ = 0);
%End
        virtual ~Q3DObject();
        virtual void copyValuesFrom(const QtDataVisualization::Q3DObject &source);
        QtDataVisualization::Q3DScene *parentScene();
        QVector3D position() const;
        void setPosition(const QVector3D &position);

    signals:
        void positionChanged(const QVector3D &position);

    protected:
        void setDirty(bool dirty);
        bool isDirty() const;
    };
};
